PDH_STATUS PdhAddCounter(PDH_HQUERY hQuery, LPCTSTR szFullCounterPath, DWORD_PTR dwUserData, PDH_HCOUNTER *phCounter){
//found following keywords: file,allocate,returns,create,
    __sparrow_fopen();
    __sparrow_new();
    return
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0xC0000BC0|| x == 0xC0000BB9|| x == 0xC0000BBF|| x == 0x800007D0|| x == 0xC0000BB8|| x == 0xC0000BBE|| x == 0xC0000BBD|| x == 0xC0000BBC|| x == 0xC0000BBB){
        return x;
    }
    else{
        return 0;
    }
}
PDH_STATUS PdhAddEnglishCounter(PDH_HQUERY hQuery, LPCTSTR szFullCounterPath, DWORD_PTR dwUserData, PDH_HCOUNTER *phCounter){
//found following keywords: allocate,must,returns,create,
    __sparrow_new();
    must
    return
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0xC0000BC0|| x == 0xC0000BB9|| x == 0xC0000BBF|| x == 0x800007D0|| x == 0xC0000BB8|| x == 0xC0000BBE|| x == 0xC0000BBD|| x == 0xC0000BBC|| x == 0xC0000BBB){
        return x;
    }
    else{
        return 0;
    }
}
PDH_STATUS PdhBindInputDataSource(PDH_HLOG *phDataSource, LPCTSTR szLogFileNameList){
//found following keywords: file,returns,
    __sparrow_fopen();
    return
    return __sparrow_top;
}
PDH_STATUS PdhBrowseCounters(PPDH_BROWSE_DLG_CONFIG pBrowseDlgData){
//found following keywords: returns,
    return
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0x800007D9){
        return x;
    }
    else{
        return 0;
    }
}
PDH_STATUS PdhBrowseCountersH(PPDH_BROWSE_DLG_CONFIG pBrowseDlgData){
//found following keywords: returns,
    return
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0x800007D9){
        return x;
    }
    else{
        return 0;
    }
}
PDH_STATUS PdhCalculateCounterFromRawValue(PDH_HCOUNTER hCounter, DWORD dwFormat, PPDH_RAW_COUNTER rawValue1, PPDH_RAW_COUNTER rawValue2, PPDH_FMT_COUNTERVALUE fmtValue){
//found following keywords: must,returns,
    must
    return
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0xC0000BBD|| x == 0xC0000BBC){
        return x;
    }
    else{
        return 0;
    }
}
PDH_STATUS PdhCloseLog(PDH_HLOG hLog, DWORD dwFlags){
//found following keywords: file,returns,delete,
    __sparrow_fopen();
    return
    __sparrow_delete();
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0xC0000BBC){
        return x;
    }
    else{
        return 0;
    }
}
PDH_STATUS PdhCloseQuery(PDH_HQUERY hQuery){
//found following keywords: file,returns,
    __sparrow_fopen();
    return
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0xC0000BBC){
        return x;
    }
    else{
        return 0;
    }
}
PDH_STATUS PdhCollectQueryData(PDH_HQUERY hQuery){
//found following keywords: file,returns,create,
    __sparrow_fopen();
    return
    __sparrow_new();
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0xC0000BBC|| x == 0x800007D5|| x == 0x800007D5){
        return x;
    }
    else{
        return 0;
    }
}
PDH_STATUS PdhCollectQueryDataEx(PDH_HQUERY hQuery, DWORD dwIntervalTime, HANDLE hNewDataEvent){
//found following keywords: returns,create,
    return
    __sparrow_new();
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0xC0000BBC|| x == 0x800007D5|| x == 0x800007D5|| x == PDH_STATUS|| x == PDH_HQUERY|| x == PDH_HCOUNTER|| x == PDH_FMT_COUNTERVALUE|| x == ERROR_SUCCESS)|| x == ERROR_SUCCESS)|| x == ERROR_SUCCESS)|| x == ERROR_SUCCESS)|| x == PDH_FMT_DOUBLE,|| x == ERROR_SUCCESS)){
        return x;
    }
    else{
        return 0;
    }
}
PDH_STATUS PdhCollectQueryDataWithTime(PDH_HQUERY hQuery, LONGLONG *pllTimeStamp){
//found following keywords: returns,create,
    return
    __sparrow_new();
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0xC0000BBC|| x == 0x800007D5|| x == 0x800007D5){
        return x;
    }
    else{
        return 0;
    }
}
PDH_STATUS PdhComputeCounterStatistics(PDH_HCOUNTER hCounter, DWORD dwFormat, DWORD dwFirstEntry, DWORD dwNumEntries, PPDH_RAW_COUNTER lpRawValueArray, PPDH_STATISTICS data){
//found following keywords: buffer,must,returns,
    __sparrow_bufacc();
    must
    return
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0xC0000BBD|| x == 0xC0000BBC){
        return x;
    }
    else{
        return 0;
    }
}
PDH_STATUS PdhConnectMachine(LPCTSTR szMachineName){
//found following keywords: allocate,dynamic,returns,
    __sparrow_new();
    return
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0x800007D0|| x == 0xC0000BBB|| x == PDH_BROWSE_DLG_CONFIG){
        return x;
    }
    else{
        return 0;
    }
}
PDH_STATUS PdhEnumLogSetNames(LPCTSTR szDataSource, LPTSTR mszLogSetNameList, LPDWORD pcchBufferLength){
//found following keywords: buffer,allocate,returns,create,delete,
    __sparrow_bufacc();
    __sparrow_new();
    return
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0x800007D2|| x == 0xC0000BBD){
        return x;
    }
    else{
        return 0;
    }
}
PDH_STATUS PdhEnumMachines(LPCTSTR szDataSource, LPTSTR mszMachineNameList, LPDWORD pcchBufferLength){
//found following keywords: buffer,allocate,returns,
    __sparrow_bufacc();
    __sparrow_new();
    return
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0x800007D2|| x == 0xC0000BBD){
        return x;
    }
    else{
        return 0;
    }
}
PDH_STATUS PdhEnumMachinesH(PDH_HLOG hDataSource, LPTSTR mszMachineNameList, LPDWORD pcchBufferLength){
//found following keywords: buffer,allocate,returns,
    __sparrow_bufacc();
    __sparrow_new();
    return
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0x800007D2|| x == 0xC0000BBD){
        return x;
    }
    else{
        return 0;
    }
}
PDH_STATUS PdhEnumObjectItems(LPCTSTR szDataSource, LPCTSTR szMachineName, LPCTSTR szObjectName, LPTSTR mszCounterList, LPDWORD pcchCounterListLength, LPTSTR mszInstanceList, LPDWORD pcchInstanceListLength, DWORD dwDetailLevel, DWORD dwFlags){
//found following keywords: buffer,allocate,must,returns,
    __sparrow_bufacc();
    __sparrow_new();
    must
    return
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0x800007D2|| x == 0xC0000BBD|| x == 0xC0000BBB|| x == 0x800007D0|| x == 0xC0000BB8){
        return x;
    }
    else{
        return 0;
    }
}
PDH_STATUS PdhEnumObjectItemsH(PDH_HLOG hDataSource, LPCTSTR szMachineName, LPCTSTR szObjectName, LPTSTR mszCounterList, LPDWORD pcchCounterListLength, LPTSTR mszInstanceList, LPDWORD pcchInstanceListLength, DWORD dwDetailLevel, DWORD dwFlags){
//found following keywords: buffer,allocate,must,returns,
    __sparrow_bufacc();
    __sparrow_new();
    must
    return
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0x800007D2|| x == 0xC0000BBD|| x == 0xC0000BBB|| x == 0x800007D0|| x == 0xC0000BB8){
        return x;
    }
    else{
        return 0;
    }
}
PDH_STATUS PdhEnumObjects(LPCTSTR szDataSource, LPCTSTR szMachineName, LPTSTR mszObjectList, LPDWORD pcchBufferLength, DWORD dwDetailLevel, BOOL bRefresh){
//found following keywords: buffer,allocate,returns,
    __sparrow_bufacc();
    __sparrow_new();
    return
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0x800007D2|| x == 0x800007D0|| x == 0xC0000BB8|| x == 0xC0000BBD){
        return x;
    }
    else{
        return 0;
    }
}
PDH_STATUS PdhEnumObjectsH(PDH_HLOG hDataSource, LPCTSTR szMachineName, LPTSTR mszObjectList, LPDWORD pcchBufferLength, DWORD dwDetailLevel, BOOL bRefresh){
//found following keywords: buffer,allocate,returns,
    __sparrow_bufacc();
    __sparrow_new();
    return
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0x800007D2|| x == 0x800007D0|| x == 0xC0000BB8|| x == 0xC0000BBD){
        return x;
    }
    else{
        return 0;
    }
}
PDH_STATUS PdhExpandCounterPath(LPCTSTR szWildCardPath, LPTSTR mszExpandedPathList, LPDWORD pcchPathListLength){
//found following keywords: buffer,allocate,must,returns,free,
    __sparrow_bufacc();
    __sparrow_new();
    must
    return
    __sparrow_close_handle();
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0x800007D2|| x == 0xC0000BBD|| x == 0xC0000BBB|| x == PDH_STATUS|| x == PDH_MORE_DATA)|| x == ERROR_SUCCESS)){
        return x;
    }
    else{
        return 0;
    }
}
PDH_STATUS PdhExpandWildCardPath(LPCTSTR szDataSource, LPCTSTR szWildCardPath, LPTSTR mszExpandedPathList, LPDWORD pcchPathListLength, DWORD dwFlags){
//found following keywords: buffer,allocate,must,returns,
    __sparrow_bufacc();
    __sparrow_new();
    must
    return
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0x800007D2|| x == 0xC0000BBD|| x == 0xC0000BC4|| x == 0xC0000BBB|| x == 0xC0000BB8){
        return x;
    }
    else{
        return 0;
    }
}
PDH_STATUS PdhExpandWildCardPathH(PDH_HLOG hDataSource, LPCTSTR szWildCardPath, LPTSTR mszExpandedPathList, LPDWORD pcchPathListLength, DWORD dwFlags){
//found following keywords: buffer,allocate,must,returns,
    __sparrow_bufacc();
    __sparrow_new();
    must
    return
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0x800007D2|| x == 0xC0000BBD|| x == 0xC0000BBB|| x == 0xC0000BB8){
        return x;
    }
    else{
        return 0;
    }
}
PDH_STATUS PdhFormatFromRawValue(DWORD dwCounterType, DWORD dwFormat, LONGLONG *pTimeBase, PPDH_RAW_COUNTER rawValue1, PPDH_RAW_COUNTER rawValue2, PPDH_FMT_COUNTERVALUE fmtValue){
//found following keywords: must,returns,
    must
    return
    return __sparrow_top;
}
PDH_STATUS PdhGetCounterInfo(PDH_HCOUNTER hCounter, BOOLEAN bRetrieveExplainText, LPDWORD pdwBufferSize, PPDH_COUNTER_INFO lpBuffer){
//found following keywords: buffer,allocate,returns,
    __sparrow_bufacc();
    __sparrow_new();
    return
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0xC0000BBD|| x == 0xC0000BBC|| x == 0x800007D2){
        return x;
    }
    else{
        return 0;
    }
}
PDH_STATUS PdhGetCounterTimeBase(PDH_HCOUNTER hCounter, LONGLONG *pTimeBase){
//found following keywords: must,returns,
    must
    return
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0xC0000BBD|| x == 0xC0000BBC){
        return x;
    }
    else{
        return 0;
    }
}
PDH_STATUS PdhGetDataSourceTimeRange(LPCTSTR szDataSource, LPDWORD pdwNumEntries, PPDH_TIME_INFO pInfo, LPDWORD pdwBufferSize){
//found following keywords: buffer,returns,
    __sparrow_bufacc();
    return
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0xC0000BBD|| x == 0xC0000BBC|| x == 0xC0000BCF){
        return x;
    }
    else{
        return 0;
    }
}
PDH_STATUS PdhGetDataSourceTimeRangeH(PDH_HLOG hDataSource, LPDWORD pdwNumEntries, PPDH_TIME_INFO pInfo, LPDWORD pdwBufferSize){
//found following keywords: buffer,returns,
    __sparrow_bufacc();
    return
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0xC0000BBD|| x == 0xC0000BBC|| x == 0xC0000BCF){
        return x;
    }
    else{
        return 0;
    }
}
PDH_STATUS PdhGetDefaultPerfCounter(LPCTSTR szDataSource, LPCTSTR szMachineName, LPCTSTR szObjectName, LPTSTR szDefaultCounterName, LPDWORD pcchBufferSize){
//found following keywords: buffer,allocate,returns,
    __sparrow_bufacc();
    __sparrow_new();
    return
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0x800007D2|| x == 0xC0000BBD|| x == 0xC0000BBB|| x == 0x800007D0|| x == 0xC0000BBF|| x == 0xC0000BB8|| x == 0xC0000BB9){
        return x;
    }
    else{
        return 0;
    }
}
PDH_STATUS PdhGetDefaultPerfCounterH(PDH_HLOG hDataSource, LPCTSTR szMachineName, LPCTSTR szObjectName, LPTSTR szDefaultCounterName, LPDWORD pcchBufferSize){
//found following keywords: buffer,allocate,returns,
    __sparrow_bufacc();
    __sparrow_new();
    return
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0x800007D2|| x == 0xC0000BBD|| x == 0xC0000BBB|| x == 0x800007D0|| x == 0xC0000BBF|| x == 0xC0000BB8|| x == 0xC0000BB9){
        return x;
    }
    else{
        return 0;
    }
}
PDH_STATUS PdhGetDefaultPerfObject(LPCTSTR szDataSource, LPCTSTR szMachineName, LPTSTR szDefaultObjectName, LPDWORD pcchBufferSize){
//found following keywords: buffer,allocate,returns,
    __sparrow_bufacc();
    __sparrow_new();
    return
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0x800007D2|| x == 0xC0000BBD|| x == 0xC0000BBB|| x == 0x800007D0){
        return x;
    }
    else{
        return 0;
    }
}
PDH_STATUS PdhGetDefaultPerfObjectH(PDH_HLOG hDataSource, LPCTSTR szMachineName, LPTSTR szDefaultObjectName, LPDWORD pcchBufferSize){
//found following keywords: buffer,allocate,returns,
    __sparrow_bufacc();
    __sparrow_new();
    return
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0x800007D2|| x == 0xC0000BBD|| x == 0xC0000BBB|| x == 0x800007D0|| x == 0xC0000BBF){
        return x;
    }
    else{
        return 0;
    }
}
PDH_STATUS PdhGetDllVersion(LPDWORD lpdwVersion){
//found following keywords: returns,create,delete,
    return
    __sparrow_new();
    return __sparrow_top;
}
PDH_STATUS PdhGetFormattedCounterArray(PDH_HCOUNTER hCounter, DWORD dwFormat, LPDWORD lpdwBufferSize, LPDWORD lpdwBufferCount, PPDH_FMT_COUNTERVALUE_ITEM ItemBuffer){
//found following keywords: buffer,allocate,returns,free,
    __sparrow_bufacc();
    __sparrow_new();
    return
    __sparrow_close_handle();
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0x800007D2|| x == 0xC0000BBD|| x == 0xC0000BBC|| x == PDH_HQUERY|| x == PDH_HCOUNTER|| x == PDH_FMT_COUNTERVALUE_ITEM|| x == PDH_FMT_COUNTERVALUE_ITEM|| x == PDH_FMT_DOUBLE,|| x == 0x800007D2|| x == PDH_FMT_COUNTERVALUE_ITEM|| x == PDH_FMT_DOUBLE,){
        return x;
    }
    else{
        return 0;
    }
}
PDH_STATUS PdhGetFormattedCounterValue(PDH_HCOUNTER hCounter, DWORD dwFormat, LPDWORD lpdwType, PPDH_FMT_COUNTERVALUE pValue){
//found following keywords: file,must,returns,
    __sparrow_fopen();
    must
    return
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0xC0000BBD|| x == 0xC0000BC6|| x == 0xC0000BBC|| x == 0xC0000BC6|| x == PDH_FMT_COUNTERVALUE|| x == 0x800007D1){
        return x;
    }
    else{
        return 0;
    }
}
PDH_STATUS PdhGetLogFileSize(PDH_HLOG hLog, LONGLONG *llSize){
//found following keywords: file,returns,
    __sparrow_fopen();
    return
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0xC0000BCA|| x == 0xC0000BBC){
        return x;
    }
    else{
        return 0;
    }
}
PDH_STATUS PdhGetRawCounterArray(PDH_HCOUNTER hCounter, LPDWORD lpdwBufferSize, LPDWORD lpdwItemCount, PPDH_RAW_COUNTER_ITEM ItemBuffer){
//found following keywords: buffer,allocate,returns,
    __sparrow_bufacc();
    __sparrow_new();
    return
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0x800007D2|| x == 0xC0000BBD|| x == 0xC0000BBC){
        return x;
    }
    else{
        return 0;
    }
}
PDH_STATUS PdhGetRawCounterValue(PDH_HCOUNTER hCounter, LPDWORD lpdwType, PPDH_RAW_COUNTER pValue){
//found following keywords: returns,
    return
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0xC0000BBD|| x == 0xC0000BBC|| x == PDH_RAW_COUNTER|| x == 0x800007D1){
        return x;
    }
    else{
        return 0;
    }
}
BOOL PdhIsRealTimeQuery(PDH_HQUERY hQuery){
//
}
PDH_STATUS PdhLookupPerfIndexByName(LPCTSTR szMachineName, LPCTSTR szNameBuffer, LPDWORD pdwIndex){
//found following keywords: returns,
    return
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0xC0000BBD){
        return x;
    }
    else{
        return 0;
    }
}
PDH_STATUS PdhLookupPerfNameByIndex(LPCTSTR szMachineName, DWORD dwNameIndex, LPTSTR szNameBuffer, LPDWORD pcchNameBufferSize){
//found following keywords: buffer,allocate,must,returns,
    __sparrow_bufacc();
    __sparrow_new();
    must
    return
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0x800007D2|| x == 0xC0000BBD|| x == 0xC0000BC2|| x == 0x800007D2|| x == PDH_MAX_COUNTER_NAME){
        return x;
    }
    else{
        return 0;
    }
}
PDH_STATUS PdhMakeCounterPath(PDH_COUNTER_PATH_ELEMENTS *pCounterPathElements, LPTSTR szFullPathBuffer, LPDWORD pcchBufferSize, DWORD dwFlags){
//found following keywords: buffer,allocate,returns,
    __sparrow_bufacc();
    __sparrow_new();
    return
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0x800007D2|| x == 0xC0000BBD){
        return x;
    }
    else{
        return 0;
    }
}
PDH_STATUS PdhOpenLog(LPCTSTR szLogFileName, DWORD dwAccessFlags, LPDWORD lpdwLogType, PDH_HQUERY hQuery, DWORD dwMaxSize, LPCTSTR szUserCaption, PDH_HLOG *phLog){
//found following keywords: file,must,returns,create,
    __sparrow_fopen();
    must
    return
    __sparrow_new();
    return __sparrow_top;
}
PDH_STATUS PdhOpenQuery(LPCTSTR szDataSource, DWORD_PTR dwUserData, PDH_HQUERY *phQuery){
//found following keywords: file,returns,
    __sparrow_fopen();
    return
    return __sparrow_top;
}
PDH_STATUS PdhOpenQueryH(PDH_HLOG hDataSource, DWORD_PTR dwUserData, PDH_HQUERY *phQuery){
//found following keywords: returns,
    return
    return __sparrow_top;
}
PDH_STATUS PdhParseCounterPath(LPCTSTR szFullPathBuffer, PDH_COUNTER_PATH_ELEMENTS *pCounterPathElements, LPDWORD pdwBufferSize, DWORD dwFlags){
//found following keywords: buffer,allocate,returns,
    __sparrow_bufacc();
    __sparrow_new();
    return
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0xC0000BBD|| x == 0x800007D2|| x == 0xC0000BC4|| x == 0xC0000BBB){
        return x;
    }
    else{
        return 0;
    }
}
PDH_STATUS PdhParseInstanceName(LPCTSTR szInstanceString, LPTSTR szInstanceName, LPDWORD pcchInstanceNameLength, LPTSTR szParentName, LPDWORD pcchParentNameLength, LPDWORD lpIndex){
//found following keywords: buffer,allocate,returns,
    __sparrow_bufacc();
    __sparrow_new();
    return
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0xC0000BBD|| x == 0x800007D2|| x == 0xC0000BC5){
        return x;
    }
    else{
        return 0;
    }
}
PDH_STATUS PdhReadRawLogRecord(PDH_HLOG hLog, FILETIME ftRecord, PPDH_RAW_LOG_RECORD pRawLogRecord, LPDWORD pdwBufferLength){
//found following keywords: buffer,allocate,returns,
    __sparrow_bufacc();
    __sparrow_new();
    return
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0xC0000BBD|| x == 0x800007D2|| x == 0xC0000BBB){
        return x;
    }
    else{
        return 0;
    }
}
PDH_STATUS PdhRemoveCounter(PDH_HCOUNTER hCounter){
//found following keywords: returns,
    return
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0xC0000BBC){
        return x;
    }
    else{
        return 0;
    }
}
PDH_STATUS PdhSelectDataSource(HWND hWndOwner, DWORD dwFlags, LPTSTR szDataSource, LPDWORD pcchBufferLength){
//found following keywords: buffer,allocate,returns,
    __sparrow_bufacc();
    __sparrow_new();
    return
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0xC0000BBD|| x == 0xC0000BBB){
        return x;
    }
    else{
        return 0;
    }
}
PDH_STATUS PdhSetCounterScaleFactor(PDH_HCOUNTER hCounter, LONG lFactor){
//found following keywords: returns,
    return
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0xC0000BBD|| x == 0xC0000BBC){
        return x;
    }
    else{
        return 0;
    }
}
PDH_STATUS PdhSetDefaultRealTimeDataSource(DWORD dwDataSourceId){
//found following keywords: must,returns,
    must
    return
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0xC0000BBD){
        return x;
    }
    else{
        return 0;
    }
}
PDH_STATUS PdhSetQueryTimeRange(PDH_HQUERY hQuery, PPDH_TIME_INFO pInfo){
//found following keywords: must,returns,
    must
    return
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0xC0000BBC|| x == 0xC0000BBD|| x == 0xC0000BCC){
        return x;
    }
    else{
        return 0;
    }
}
PDH_STATUS PdhUpdateLog(PDH_HLOG hLog, LPCTSTR szUserString){
//found following keywords: file,returns,
    __sparrow_fopen();
    return
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0xC0000BBC|| x == 0xC0000BBD){
        return x;
    }
    else{
        return 0;
    }
}
PDH_STATUS PdhUpdateLogFileCatalog(PDH_HLOG hLog){
//found following keywords: file,returns,
    __sparrow_fopen();
    return
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0xC0000BD3|| x == 0xC0000BD6|| x == 0xC0000BBC|| x == 0xC0000BD3){
        return x;
    }
    else{
        return 0;
    }
}
PDH_STATUS PdhValidatePath(LPCTSTR szFullCounterPath){
//found following keywords: buffer,allocate,returns,
    __sparrow_bufacc();
    __sparrow_new();
    return
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0x800007D1|| x == 0xC0000BB9|| x == 0xC0000BB8|| x == 0x800007D0|| x == 0xC0000BC0|| x == 0xC0000BBB){
        return x;
    }
    else{
        return 0;
    }
}
PDH_STATUS PdhValidatePathEx(PDH_HLOG hDataSource, LPCTSTR szFullPathBuffer){
//found following keywords: buffer,allocate,returns,
    __sparrow_bufacc();
    __sparrow_new();
    return
    return __sparrow_top;

    int x = __sparrow_top;
    if( x == 0x800007D1|| x == 0xC0000BB9|| x == 0xC0000BB8|| x == 0x800007D0|| x == 0xC0000BC0|| x == 0xC0000BBB){
        return x;
    }
    else{
        return 0;
    }
}
